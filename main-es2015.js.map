{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/claim-status/claim-status.component.html","webpack:///./src/app/fnol/claim-details/claim-details.component.html","webpack:///./src/app/fnol/claim-overview/claim-overview.component.html","webpack:///./src/app/fnol/confirmation/confirmation.component.html","webpack:///./src/app/fnol/fnol.component.html","webpack:///./src/app/fnol/personal-details/personal-details.component.html","webpack:///./src/app/fnol/submit-modal.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/progress-bar/progress-bar.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/claim-status/claim-status.component.scss","webpack:///./src/app/claim-status/claim-status.component.ts","webpack:///./src/app/fnol/claim-details/claim-details.component.ts","webpack:///./src/app/fnol/claim-details/form-fields.ts","webpack:///./src/app/fnol/claim-overview/claim-overview.component.ts","webpack:///./src/app/fnol/claim-overview/form-fields.ts","webpack:///./src/app/fnol/confirmation/confirmation.component.ts","webpack:///./src/app/fnol/confirmation/form-fields.ts","webpack:///./src/app/fnol/fnol.component.scss","webpack:///./src/app/fnol/fnol.component.ts","webpack:///./src/app/fnol/personal-details/form-fields.ts","webpack:///./src/app/fnol/personal-details/personal-details.component.ts","webpack:///./src/app/fnol/submit-modal.component.ts","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/progress-bar/progress-bar.component.scss","webpack:///./src/app/progress-bar/progress-bar.component.ts","webpack:///./src/app/shared/data/claim-statuses.ts","webpack:///./src/app/shared/services/decibel.service.ts","webpack:///./src/app/shared/services/static-data.service.ts","webpack:///./src/app/shared/services/storage.service.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/shared/validators/common.validator.ts","webpack:///./src/app/shared/validators/personal-details.validator.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"left-sidebar\\\"></div>\\n  <div class=\\\"fnol-form\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  <div class=\\\"right-sidebar\\\"></div>\\n</div>\"","module.exports = \"<div class=\\\"progress\\\">\\n  <app-progress-bar [claimsCounts]=\\\"claimsCounts\\\"></app-progress-bar>\\n</div>\\n\\n<div class=\\\"fnol-form__section\\\">\\n  <h2 class=\\\"fnol-form__title\\\">Your claim status</h2>\\n\\n  <p>If you're looking to make a claim you can <a [routerLink]=\\\"['/make-a-claim']\\\">make a claim here</a>.</p>\\n\\n  <dlg-field [config]=\\\"formData.emailAddress\\\" [formGroup]=\\\"form\\\">\\n    <dlg-input></dlg-input>\\n  </dlg-field>\\n\\n  <button dlg-button (click)=\\\"findClaims()\\\" [disabled]=\\\"!validEmail()\\\">Find my claims</button>\\n</div>\\n\\n<ng-container *ngIf=\\\"claimsFound()\\\">\\n  <p>Your claim history is listed below, most recent first</p>\\n  \\n  <table class=\\\"fnol-form__item-table zebra\\\">\\n    <tr>\\n      <th class=\\\"fnol-form__list-heading\\\">Policy number</th>\\n      <th class=\\\"fnol-form__list-heading\\\">Claim description</th>\\n      <th class=\\\"fnol-form__list-heading\\\">Current status</th>\\n    </tr>\\n    <tr *ngFor=\\\"let claim of claims\\\">\\n      <td class=\\\"fnol-form__list-item\\\">{{ claim.policyNumber }}</td>\\n      <td class=\\\"fnol-form__list-item\\\">{{ claim.whatHappened | slice:0:20 }}...</td>\\n      <td class=\\\"fnol-form__list-item bold\\\" *ngIf=\\\"claim.status\\\">{{ claim.status }}</td>\\n      <td class=\\\"fnol-form__list-item bold\\\" *ngIf=\\\"!claim.status\\\">Logged</td>\\n    </tr>\\n  </table>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"!claimsExist\\\">\\n  <p>We haven't found any claims for email address <span class=\\\"bold\\\">{{ form.get('emailAddress').value }}</span>. You might have used a different email address when you made the claim. If you haven't made a claim yet, please <a [routerLink]=\\\"['/make-a-claim']\\\">make a claim here</a> or contact us</p>\\n</ng-container>\"","module.exports = \"<div class=\\\"fnol-form__section\\\">\\n  <h2 class=\\\"fnol-form__title\\\">Claim Details</h2>\\n\\n  <dlg-field [config]=\\\"formData.damage\\\" [formGroup]=\\\"form\\\">\\n    <dlg-radio></dlg-radio>\\n  </dlg-field>\\n\\n  <div class=\\\"fnol-form__items\\\" *ngIf=\\\"showDamagedItems\\\">\\n    <h3 class=\\\"fnol-form__subtitle\\\">Damaged Items</h3>\\n\\n    <dlg-field [config]=\\\"formData.itemType\\\" [formGroup]=\\\"form\\\">\\n      <dlg-input></dlg-input>\\n    </dlg-field>\\n  \\n    <dlg-field [config]=\\\"formData.itemMakeModel\\\" [formGroup]=\\\"form\\\">\\n      <dlg-input></dlg-input>\\n    </dlg-field>\\n  \\n    <dlg-field [config]=\\\"formData.itemPrice\\\" [formGroup]=\\\"form\\\">\\n      <dlg-input></dlg-input>\\n    </dlg-field>\\n\\n    <div class=\\\"dlg-field__error item-list\\\" *ngIf=\\\"damagedItemList && damagedItemList.length == 0\\\">\\n      As you have selected \\\"Contents\\\" / \\\"Both\\\", please add at least one item\\n    </div>\\n\\n    <button dlg-button (click)=\\\"addItem()\\\" theme=\\\"primary\\\" size=\\\"toolbar\\\" [disabled]=\\\"disableAddItem\\\">Add Item</button>\\n\\n    <table class=\\\"fnol-form__item-table\\\" *ngIf=\\\"damagedItemList && damagedItemList.length > 0\\\">\\n      <thead>\\n        <th class=\\\"fnol-form__list-heading\\\">Item</th>\\n        <th class=\\\"fnol-form__list-heading\\\">Make/Model</th>\\n        <th class=\\\"fnol-form__list-heading\\\">Price</th>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let item of damagedItemList; let i = index\\\">\\n          <td class=\\\"fnol-form__list-item\\\">{{ item.type }}</td>\\n          <td class=\\\"fnol-form__list-item\\\">{{ item.make }}</td>\\n          <td class=\\\"fnol-form__list-item\\\">{{ item.price }}</td>\\n          <td class=\\\"fnol-form__list-button\\\">\\n            <button dlg-button (click)=\\\"removeItem(i, 'damagedItemList')\\\" theme=\\\"primary\\\" size=\\\"toolbar\\\">\\n              <img src=\\\"../../assets/images/delete.png\\\" alt=\\\"Personal Details\\\">\\n            </button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n\\n  <h3 class=\\\"fnol-form__subtitle\\\">Supporting Documents</h3>\\n  <div class=\\\"dlg-hint__text\\\">{{ formData.fileUploads.hint.text }}</div>\\n\\n  <dlg-field [config]=\\\"formData.fileUploads\\\" [formGroup]=\\\"form\\\" class=\\\"fnol-form__uploads\\\">\\n    <input type=\\\"file\\\" [id]=\\\"formData.fileUploads.name\\\" [formControlName]=\\\"formData.fileUploads.name\\\" class=\\\"dlg-file-upload\\\" (change)=\\\"onFileUpload($event)\\\">\\n  </dlg-field>\\n\\n  <table class=\\\"fnol-form__item-table\\\" *ngIf=\\\"fileUploadList && fileUploadList.length > 0\\\">\\n    <thead>\\n      <th class=\\\"fnol-form__list-heading\\\">File name</th>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let item of fileUploadList; let i = index\\\">\\n        <td class=\\\"fnol-form__list-item\\\">{{ item }}</td>\\n        <td class=\\\"fnol-form__list-button\\\">\\n          <button dlg-button (click)=\\\"removeItem(i, 'fileUploadList')\\\" theme=\\\"primary\\\" size=\\\"toolbar\\\">\\n            <img src=\\\"../../assets/images/delete.png\\\" alt=\\\"Personal Details\\\">\\n          </button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\\n  <!-- {{ formData.fileUploads | json }} -->\\n</div>\"","module.exports = \"<div class=\\\"fnol-form__section\\\">\\n  <h2 class=\\\"fnol-form__title\\\">Your Claim</h2>\\n\\n  <dlg-field [config]=\\\"formData.incidentDate\\\" [formGroup]=\\\"form\\\">\\n    <dlg-datepicker type=\\\"select\\\" [format]=\\\"formData.incidentDate.format\\\" ></dlg-datepicker>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.whatHappened\\\" [formGroup]=\\\"form\\\">\\n    <textarea [placeholder]=\\\"formData.whatHappened.placeholder\\\" [id]=\\\"formData.whatHappened.name\\\" [formControlName]=\\\"formData.whatHappened.name\\\" class=\\\"dlg-textarea\\\"></textarea>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.claimLocation\\\" [formGroup]=\\\"form\\\">\\n    <dlg-radio></dlg-radio>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.occupied\\\" [formGroup]=\\\"form\\\" *ngIf=\\\"showOccupied\\\">\\n    <dlg-radio></dlg-radio>\\n  </dlg-field>\\n\\n  <!-- {{ formData | json }} -->\\n</div>\"","module.exports = \"<div class=\\\"fnol-form__section\\\">\\n  <h2 class=\\\"fnol-form__title\\\">Confirmation</h2>\\n\\n  <dlg-field [config]=\\\"formData.callbackSlot\\\" [formGroup]=\\\"form\\\">\\n    <dlg-radio></dlg-radio>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.convictions\\\" [formGroup]=\\\"form\\\">\\n    <dlg-radio></dlg-radio>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.awareExcess\\\" [formGroup]=\\\"form\\\">\\n    <dlg-checkboxes></dlg-checkboxes>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.termsConditions\\\" [formGroup]=\\\"form\\\">\\n    <dlg-checkboxes></dlg-checkboxes>\\n  </dlg-field>\\n</div>\"","module.exports = \"<div class=\\\"progress\\\">\\n  <app-progress-bar></app-progress-bar>\\n</div>\\n<h2 class=\\\"fnol-form__subtitle fnol-form__emergency\\\">For emergencies call us on: <strong>0123456789</strong></h2>\\n<p>Already made a claim? You can <a [routerLink]=\\\"['/claim-status']\\\">check its status here</a>.</p>\\n<form id=\\\"fnol-form\\\" data-di-form-track data-di-form-id=\\\"fnol-form\\\" [formGroup]=\\\"form\\\">\\n  <app-personal-details (validPersonalDetails)='retrievePersonalDetails($event)'></app-personal-details>\\n  <app-claim-overview (validClaimOverview)='retrieveClaimOverview($event)'></app-claim-overview>\\n  <app-claim-details (validClaimDetails)='retrieveClaimDetails($event)'></app-claim-details>\\n  <app-confirmation (validConfirmation)='retrieveConfirmation($event)'></app-confirmation>\\n</form>\\n<button dlg-button [disabled]=\\\"!isFormValid()\\\" (click)=\\\"submitClaim()\\\" class=\\\"fnol-submit\\\">\\n  <span *ngIf=\\\"!isFormValid()\\\">Please complete the form</span>\\n  <span *ngIf=\\\"isFormValid()\\\">Make a claim</span>\\n</button>\"","module.exports = \"<div class=\\\"fnol-form__section\\\">\\n  <h2 class=\\\"fnol-form__title\\\">Personal Details</h2>\\n\\n  <dlg-field [config]=\\\"formData.fullName\\\" [formGroup]=\\\"form\\\">\\n    <dlg-input></dlg-input>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.postCode\\\" [formGroup]=\\\"form\\\" class=\\\"last-field\\\">\\n    <dlg-input></dlg-input>\\n  </dlg-field>\\n\\n  <button dlg-button [disabled]=\\\"!isAutofillable()\\\" (click)=\\\"getPolicyHolder()\\\" class=\\\"fnol-autofill\\\">Find my details</button>\\n\\n  <dlg-field [config]=\\\"formData.phoneNumber\\\" [formGroup]=\\\"form\\\">\\n    <dlg-input></dlg-input>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.emailAddress\\\" [formGroup]=\\\"form\\\">\\n    <dlg-input></dlg-input>\\n  </dlg-field>\\n\\n  <dlg-field [config]=\\\"formData.addressLine\\\" [formGroup]=\\\"form\\\">\\n    <dlg-input></dlg-input>\\n  </dlg-field>\\n\\n  <h3 class=\\\"fnol-form__subtitle\\\" *ngIf=\\\"policyNumber\\\">\\n    Your policy number: {{ policyNumber }} \\n    <span *ngIf=\\\"excess\\\"><br>Your excess: £{{ excess }}</span>\\n  </h3>\\n\\n</div>\"","module.exports = \"<h2 class=\\\"fnol-form__subtitle\\\">{{ data.title }}</h2>\\n<p class=\\\"modal-confirmation__message\\\">{{ data.message1 }}</p>\\n<p class=\\\"modal-confirmation__message\\\">{{ data.message2 }}</p>\\n<dlg-modal-actions>\\n  <button dlg-button (click)=\\\"onClose()\\\" class=\\\"modal-confirmation__button\\\">\\n    {{ data.button }}\\n  </button>\\n</dlg-modal-actions>\"","module.exports = \"<div class=\\\"progress\\\">\\n  <app-progress-bar></app-progress-bar>\\n</div>\\n<div class=\\\"fnol-form__section\\\">\\n  <h2 class=\\\"fnol-form__title\\\">Your Claim</h2>\\n  <p>To make a claim, simply fill in <a [routerLink]=\\\"['make-a-claim']\\\">this online form</a>. After you’ve made your claim, you can <a [routerLink]=\\\"['claim-status']\\\">check its status here</a>. We might call you back for more details or to arrange a visit from an assessor.</p>\\n  <button dlg-button [routerLink]=\\\"['make-a-claim']\\\">Make a claim</button>&nbsp;\\n  <button dlg-button [routerLink]=\\\"['claim-status']\\\">Claim status</button>\\n  <p>You will have the option to upload files or images to support your claim. Please have these saved on your computer or device.</p>\\n</div>\\n\"","module.exports = \"<img src=\\\"../../assets/images/logo.png\\\" alt=\\\"Direct Line\\\" class=\\\"progress__logo\\\" [routerLink]=\\\"['']\\\">\\n<div class=\\\"progress__steps\\\" *ngIf = \\\"router.url === '/make-a-claim'\\\">\\n  <div class=\\\"progress__step progress__step1 progress__active-step\\\">\\n    <img src=\\\"../../assets/images/personal.png\\\" alt=\\\"Personal Details\\\" class=\\\"progress__step-image\\\">\\n  </div>\\n  <div class=\\\"progress__step progress__step2\\\">\\n    <img src=\\\"../../assets/images/what.png\\\" alt=\\\"What happened\\\" class=\\\"progress__step-image\\\">\\n  </div>\\n  <div class=\\\"progress__step progress__step3\\\">\\n    <img src=\\\"../../assets/images/details.png\\\" alt=\\\"Claim details\\\" class=\\\"progress__step-image\\\">\\n  </div>\\n  <div class=\\\"progress__step progress__step4\\\">\\n    <img src=\\\"../../assets/images/confirm.png\\\" alt=\\\"Confirmation\\\" class=\\\"progress__step-image\\\">\\n  </div>\\n</div>\\n<div class=\\\"progress__claim-status\\\" *ngIf = \\\"router.url === '/claim-status'\\\">\\n  <ng-container *ngFor=\\\"let status of claimStatuses\\\">\\n    <div class=\\\"progress__claim-stage progress__active-stage\\\">\\n      <span *ngIf=\\\"claimsCounts[status]\\\" class=\\\"active-status\\\">{{ status }}</span>\\n      <span *ngIf=\\\"!claimsCounts[status]\\\" class=\\\"inactive-status\\\">{{ status }}</span>\\n      <ng-container *ngIf=\\\"claimsCounts[status]\\\">\\n        <span class=\\\"badge\\\">{{ claimsCounts[status] }}</span>\\n      </ng-container>\\n    </div>\\n  </ng-container>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { FnolComponent } from './fnol/fnol.component';\nimport { ClaimStatusComponent } from './claim-status/claim-status.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'claim-status',\n    component: ClaimStatusComponent\n  },\n  {\n    path: 'make-a-claim',\n    component: FnolComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'claims';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    SharedModule\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NsYWltLXN0YXR1cy9jbGFpbS1zdGF0dXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { FieldConfig, Hint, ModalService } from 'dlg-angular-components';\nimport { CLAIMSTATUSES } from '../shared/data/claim-statuses';\nimport { PersonalDetailsValidator } from '../shared/validators/personal-details.validator';\nimport { StaticDataService } from '../shared/services/static-data.service';\nimport { StorageService } from '../shared/services/storage.service';\nimport { SubmitModalComponent } from '../fnol/submit-modal.component';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-claim-status',\n  templateUrl: './claim-status.component.html',\n  styleUrls: ['./claim-status.component.scss']\n})\nexport class ClaimStatusComponent implements OnInit, OnDestroy {\n  claimStatuses = CLAIMSTATUSES;\n  claims;\n  claimsCounts = {};\n  claimsExist = true;\n  form: FormGroup;\n  formData: any = {\n    emailAddress: {\n      name: 'emailAddress',\n      label: 'Email address',\n      placeholder: 'example@abc.com',\n      hint: {text: 'Please enter your email address so we can retrieve your claims'} as Hint,\n      validation: [\n        Validators.required,\n        PersonalDetailsValidator.ValidEmail\n      ],\n      validationMessages: {\n        required: 'Please enter your email address',\n        invalidEmail: 'Please enter a valid email address'\n      }\n    } as FieldConfig\n  };\n  formSubscription: Subscription;\n\n  findClaims() {\n    this.initialiseClaimsCounts();\n    this.dataService.getClaims(this.form.get('emailAddress').value).subscribe(claims => {\n      this.claims = claims;\n      this.claimsExist = (this.claims && this.claims.length > 0) ? true : false;\n      for (const claim of claims) {\n        const status = (claim.status) ? claim.status : 'Logged';\n        this.claimsCounts[status]++;\n      }\n    },\n    error => {\n      const confirmationTitle = 'Unable to find your claim.';\n      const confirmationMessage1 = `\n          Sorry, we could not find your claim. Please try again later.`;\n      const confirmationMessage2 = `\n          Please contact us if you continue to experience issues.`;\n\n      const modal = this.modal.open(\n                      SubmitModalComponent,\n                      { title: confirmationTitle,\n                        message1: confirmationMessage1,\n                        message2: confirmationMessage2,\n                        button: 'Try again' });\n    });\n  }\n\n  claimsFound() {\n    return (this.claims && this.claims.length > 0) ? true : false;\n  }\n\n  validEmail() {\n    return this.form.get('emailAddress').valid;\n  }\n\n  initialiseClaimsCounts() {\n    for (status of this.claimStatuses) {\n      this.claimsCounts[status] = 0;\n    }\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private dataService: StaticDataService,\n    private storage: StorageService,\n    public modal: ModalService,\n  ) { }\n\n  ngOnInit() {\n    const emailAddress =\n      this.storage.retrieveSectionValues('personalSectionValues').emailAddress ||\n      this.dataService.claimEmail;\n\n    this.form = this.fb.group({\n      emailAddress: [emailAddress, this.formData.emailAddress.validation],\n    });\n    if (emailAddress) { this.findClaims(); }\n\n    this.initialiseClaimsCounts();\n\n    this.formSubscription = this.form.valueChanges.subscribe(emailChange => {\n      this.claimsExist = true;\n      this.claims = [];\n      this.claimsCounts = {};\n      this.dataService.claimEmail = emailChange.emailAddress;\n    });\n  }\n\n  ngOnDestroy() {\n    this.formSubscription.unsubscribe();\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FORMFIELDS } from './form-fields';\nimport { StorageService } from '../../shared/services/storage.service';\nimport { DecibelService } from '../../shared/services/decibel.service';\n\n@Component({\n  selector: 'app-claim-details',\n  templateUrl: './claim-details.component.html',\n})\nexport class ClaimDetailsComponent implements OnInit, AfterViewInit {\n  @Output() validClaimDetails = new EventEmitter();\n\n  form: FormGroup;\n  formData: any = FORMFIELDS;\n  sectionName = 'claimDetailSectionValues';\n  showDamagedItems: boolean;\n  disableAddItem = !this.showDamagedItems;\n  damagedItems: {};\n  damagedItemList: {}[] = JSON.parse(localStorage.getItem('damagedItems')) || [];\n  fileUploadList: string[] = JSON.parse(localStorage.getItem('fileUploads')) || [];\n  progressStep;\n\n  constructor(\n    private fb: FormBuilder,\n    private storage: StorageService,\n    private decibel: DecibelService\n  ) { }\n\n  addItem() {\n    if (!this.disableAddItem) {\n      this.damagedItemList.push(this.damagedItems);\n      localStorage.setItem('damagedItems', JSON.stringify(this.damagedItemList));\n\n      this.form.get('itemType').markAsPristine();\n      this.form.get('itemMakeModel').markAsPristine();\n      this.form.get('itemPrice').markAsPristine();\n\n      this.form.controls.itemType.setValue('');\n      this.form.controls.itemMakeModel.setValue('');\n      this.form.controls.itemPrice.setValue('');\n    }\n  }\n\n  removeItem(index, arrayName) {\n    if (arrayName === 'damagedItemList') {\n      this.damagedItemList.splice(index, 1);\n      localStorage.setItem('damagedItems', JSON.stringify(this.damagedItemList));\n    } else if (arrayName === 'fileUploadList') {\n      this.fileUploadList.splice(index, 1);\n      localStorage.setItem('fileUploads', JSON.stringify(this.fileUploadList));\n    }\n    // Force a form change to re-trigger section validity check\n    this.form.controls.itemType.setValue('');\n    this.form.get('itemType').markAsPristine();\n  }\n\n  onFileUpload(event) {\n    const uploadFileName = event.target.files[0].name;\n\n    if (!this.fileUploadList.includes(uploadFileName)) {\n      this.fileUploadList.push(uploadFileName);\n      localStorage.setItem('fileUploads', JSON.stringify(this.fileUploadList));\n    }\n  }\n\n  buildForm() {\n    this.form = this.fb.group({\n      damage: [this.storage.retrieveSectionValue(this.sectionName, 'damage'), this.formData.damage.validation],\n      itemType: ['', this.formData.itemType.validation],\n      itemMakeModel: ['', this.formData.itemMakeModel.validation],\n      itemPrice: ['', this.formData.itemPrice.validation],\n      fileUploads: [''],\n    });\n  }\n\n  isSectionValid() {\n    let validDamage = false;\n    const damageValue = this.form.get('damage').value;\n\n    if ((damageValue === 'Contents' || damageValue === 'Both') &&\n        this.damagedItemList.length > 0) {\n      validDamage = true;\n    } else if (damageValue === 'Building') {\n      validDamage = true;\n    }\n\n    const storedValues = JSON.parse(sessionStorage.getItem(this.sectionName));\n    if (storedValues) {\n      storedValues.sectionValid = damageValue && validDamage;\n      sessionStorage.setItem(this.sectionName, JSON.stringify(storedValues));\n    }\n\n    return damageValue && validDamage;\n  }\n\n  ngAfterViewInit() {\n    this.progressStep = document.querySelector('.progress__step3');\n    this.decibel.setTrackingAttributes(this.formData);\n  }\n\n  ngOnInit() {\n    this.buildForm();\n\n    this.showDamagedItems = (\n      this.storage.retrieveSectionValue(this.sectionName, 'damage') !== 'Building' &&\n      this.storage.retrieveSectionValue(this.sectionName, 'damage')) ? true : false;\n\n    this.form.valueChanges.subscribe(values => {\n      values.sectionValid = this.isSectionValid();\n      values.items = this.damagedItemList;\n      values.uploads = this.fileUploadList;\n      this.validClaimDetails.emit(values);\n\n      this.showDamagedItems = (values.damage !== 'Building') ? true : false;\n      this.disableAddItem = (values.itemType      === '' ||\n                             values.itemMakeModel === '' ||\n                             values.itemPrice     === '' ||\n                             !this.form.get('itemPrice').valid) ? true : false;\n\n      if (!this.disableAddItem) {\n        this.damagedItems = {type: values.itemType,\n                             make: values.itemMakeModel,\n                             price: values.itemPrice};\n      }\n\n      this.storage.saveSectionValues(this.sectionName, this.form.value);\n      if (values.sectionValid) {\n        this.progressStep.classList.add('progress__valid-step');\n      } else {\n        this.progressStep.classList.remove('progress__valid-step');\n      }\n    });\n  }\n}\n","import { Validators } from '@angular/forms';\nimport { FieldConfig, FieldOptionsConfig, Hint} from 'dlg-angular-components';\nimport { CommonValidator } from 'src/app/shared/validators/common.validator';\n\nexport const FORMFIELDS = {\n  damage: {\n    name: 'damage',\n    label: 'Damage',\n    hint: {text: 'Contents are portable items you would take with you if you moved home, including carpets and curtains'} as Hint,\n    options: ['Building', 'Contents', 'Both'],\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please specify what the damage applies to'\n    }\n  } as FieldOptionsConfig,\n  itemType: {\n    name: 'itemType',\n    label: 'Damaged item',\n    placeholder: 'Cycle',\n    hint: {text: 'What is the damaged item? (Cycle, tv, computer)'} as Hint,\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please specify the damaged item'\n    }\n  } as FieldConfig,\n  itemMakeModel: {\n    name: 'itemMakeModel',\n    label: 'Make/Model?',\n    placeholder: 'Sony Playstation 4',\n    hint: {text: 'For example, Sony Playstation 4'} as Hint,\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please detail the make/model of the damaged item'\n    }\n  } as FieldConfig,\n  itemPrice: {\n    name: 'itemPrice',\n    label: 'Purchase price',\n    placeholder: '£30',\n    hint: {text: 'Purchase price of the damaged item'} as Hint,\n    validation: [\n      Validators.required,\n      CommonValidator.ValidNumber\n    ],\n    validationMessages: {\n      required: 'Please indicate the price',\n      invalidNumber: 'Please enter a number'\n    }\n  } as FieldConfig,\n  fileUploads: {\n    name: 'fileUploads',\n    label: 'Upload a file',\n    hint: {text: 'Images that show the damage, receipts, or other proof of ownership that will help us validate your claim.'} as Hint\n  } as FieldConfig\n};\n","import { Component, OnInit, EventEmitter, Output, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FORMFIELDS } from './form-fields';\nimport { StorageService } from '../../shared/services/storage.service';\nimport { DecibelService } from '../../shared/services/decibel.service';\n\n@Component({\n  selector: 'app-claim-overview',\n  templateUrl: './claim-overview.component.html',\n})\nexport class ClaimOverviewComponent implements OnInit, AfterViewInit {\n  @Output() validClaimOverview = new EventEmitter();\n\n  form: FormGroup;\n  formData: any = FORMFIELDS;\n  progressStep;\n  sectionName = 'claimSectionValues';\n  showOccupied: boolean = (this.storage.retrieveSectionValue(this.sectionName, 'claimLocation') === 'At home') ? true : false;\n\n  constructor(\n    private fb: FormBuilder,\n    private storage: StorageService,\n    private decibel: DecibelService\n  ) { }\n\n  buildForm() {\n    const incDate = this.storage.retrieveSectionValue(this.sectionName, 'incidentDate');\n\n    this.form = this.fb.group({\n      whatHappened: [this.storage.retrieveSectionValue(this.sectionName, 'whatHappened'), this.formData.whatHappened.validation],\n      claimLocation: [this.storage.retrieveSectionValue(this.sectionName, 'claimLocation'), this.formData.claimLocation.validation],\n      occupied: [this.storage.retrieveSectionValue(this.sectionName, 'occupied'), this.formData.occupied.validation],\n      incidentDate: this.fb.array(\n        (incDate === '' ? [] : incDate),\n        Validators.compose(this.formData.incidentDate.validation)\n      )\n    });\n  }\n\n  isSectionValid() {\n    let validLocation = false;\n\n    if (this.form.get('claimLocation').value === 'At home' &&\n        (this.form.get('occupied').value === 'Yes' ||\n         this.form.get('occupied').value === 'No')) {\n      validLocation = true;\n    } else if (this.form.get('claimLocation').value !== 'At home') {\n      validLocation = true;\n    }\n\n    return this.form.get('whatHappened').valid &&\n           this.form.get('claimLocation').valid &&\n           this.form.get('incidentDate').valid &&\n           validLocation;\n  }\n\n  ngAfterViewInit() {\n    this.progressStep = document.querySelector('.progress__step2');\n    this.decibel.setTrackingAttributes(this.formData);\n  }\n\n  ngOnInit() {\n    this.buildForm();\n\n    if (this.form.controls.incidentDate.value.length > 0 &&\n        this.form.controls.incidentDate.value.join('') !== '') {\n      this.form.controls.incidentDate.markAsDirty();\n    }\n    if (this.form.controls.whatHappened.value !== '') {\n      this.form.controls.whatHappened.markAsDirty();\n    }\n    if (this.form.controls.claimLocation.value !== '') {\n      this.form.controls.claimLocation.markAsDirty();\n    }\n\n    this.form.valueChanges.subscribe(values => {\n      values.sectionValid = this.isSectionValid();\n      this.validClaimOverview.emit(values);\n      this.showOccupied = (values.claimLocation === 'At home') ? true : false;\n      this.storage.setSectionValue(this.sectionName, 'sectionValid', values.sectionValid);\n      this.storage.saveSectionValues(this.sectionName, this.form.value);\n\n      if (this.progressStep) {\n        if (values.sectionValid) {\n          this.progressStep.classList.add('progress__valid-step');\n        } else {\n          this.progressStep.classList.remove('progress__valid-step');\n        }\n      }\n    });\n  }\n}\n","import { Validators } from '@angular/forms';\nimport { FieldConfig, FieldOptionsConfig, Hint} from 'dlg-angular-components';\nimport { CommonValidator } from '../../shared/validators/common.validator';\n\nexport const FORMFIELDS = {\n  incidentDate: {\n    name: 'incidentDate',\n    label: 'Date of incident',\n    hint: {text: 'When this happened or date you became aware of the issue. Must be within the last 12 months'} as Hint,\n    validation: [\n      Validators.required,\n      CommonValidator.ValidDate\n    ],\n    validationMessages: {\n      required: 'Please specify when the incident happened',\n      invalidDate: 'Please enter a valid date',\n      invalidDateRange: 'The date should be between 12 months ago and today'\n    },\n    format: {\n      years: {\n          min: new Date().getFullYear() - 1,\n          max: new Date().getFullYear()\n      }\n    }\n  } as FieldConfig,\n  whatHappened: {\n    name: 'whatHappened',\n    label: 'What happened?',\n    placeholder: '',\n    hint: {text: 'Please provide as much detail as possible about your claim'} as Hint,\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please tell us what happened'\n    }\n  } as FieldConfig,\n  claimLocation: {\n    name: 'claimLocation',\n    label: 'Where did it happen?',\n    options: ['At home', 'UK', 'Abroad'],\n    hint: {text: 'Was the incident at home/abroad'} as Hint,\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please indicate where it happened'\n    }\n  } as FieldOptionsConfig,\n  occupied: {\n    name: 'occupied',\n    label: 'Home occupied in last 60 days?',\n    options: ['Yes', 'No'],\n    hint: {text: 'Any occupants living in your home for the last 60 days'} as Hint,\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please indicate occupation status'\n    }\n  } as FieldOptionsConfig,\n};\n","import { Component, OnInit, Output, EventEmitter, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { FORMFIELDS } from './form-fields';\nimport { StorageService } from '../../shared/services/storage.service';\nimport { DecibelService } from '../../shared/services/decibel.service';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n})\nexport class ConfirmationComponent implements OnInit, AfterViewInit {\n  @Output() validConfirmation = new EventEmitter();\n\n  form: FormGroup;\n  formData: any = FORMFIELDS;\n  progressStep;\n  sectionName = 'confirmationSectionValues';\n\n  constructor(\n    private fb: FormBuilder,\n    private storage: StorageService,\n    private decibel: DecibelService\n  ) { }\n\n  buildForm() {\n    this.form = this.fb.group({\n      callbackSlot: [this.storage.retrieveSectionValue(this.sectionName, 'callbackSlot'), this.formData.callbackSlot.validation],\n      awareExcess: [this.storage.retrieveSectionValue(this.sectionName, 'awareExcess'), this.formData.awareExcess.validation],\n      termsConditions: [this.storage.retrieveSectionValue(this.sectionName, 'termsConditions'), this.formData.termsConditions.validation],\n      convictions: [this.storage.retrieveSectionValue(this.sectionName, 'convictions'), this.formData.convictions.validation],\n    });\n  }\n\n  isSectionValid() {\n    return this.form.get('callbackSlot').valid &&\n           this.form.get('termsConditions').value &&\n           this.form.get('awareExcess').value &&\n           this.form.get('convictions').valid;\n  }\n\n  ngAfterViewInit() {\n    this.progressStep = document.querySelector('.progress__step4');\n    this.decibel.setTrackingAttributes(this.formData);\n  }\n\n  ngOnInit() {\n    this.buildForm();\n\n    this.form.valueChanges.subscribe(values => {\n      values.sectionValid = this.isSectionValid();\n      this.storage.setSectionValue(this.sectionName, 'sectionValid', values.sectionValid);\n      this.storage.saveSectionValues(this.sectionName, this.form.value);\n      this.validConfirmation.emit(values);\n\n      if (values.sectionValid) {\n        this.progressStep.classList.add('progress__valid-step');\n      } else {\n        this.progressStep.classList.remove('progress__valid-step');\n      }\n    });\n  }\n\n}\n","import { Validators } from '@angular/forms';\nimport { FieldOptionsConfig, Hint } from 'dlg-angular-components';\n\nexport const FORMFIELDS = {\n  callbackSlot: {\n    name: 'callbackSlot',\n    label: 'Callback slot',\n    hint: {text: 'When should we call you back to confirm and submit your claim details'} as Hint,\n    options: ['Morning (8am-12pm)', 'Afternoon (12pm-4pm)', 'Evening (4pm-8pm)'],\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please choose a callback slot'\n    }\n  } as FieldOptionsConfig,\n  termsConditions: {\n    name: 'termsConditions',\n    label: 'Terms & conditions',\n    hint: {text: 'Please confirm all details above are correct. Incorrect or incomplete information could affect your claim.'} as Hint,\n    options: ['I confirm that the above statements are true'],\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please accept our terms and conditions'\n    }\n  } as FieldOptionsConfig,\n  awareExcess: {\n    name: 'awareExcess',\n    label: 'Aware of excess',\n    hint: {text: 'You may have to pay an excess on this claim. Details can be found in your policy summary.'} as Hint,\n    options: ['I am aware of the excess amount I will have to pay.'],\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please confirm excess awareness'\n    }\n  } as FieldOptionsConfig,\n  convictions: {\n    name: 'convictions',\n    label: 'Criminal convictions',\n    hint: {text: 'Has anyone at the address been convicted of criminal offences or have prosecutions pending (except motoring)'} as Hint,\n    options: ['Yes', 'No'],\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please answer yes/no to criminal convictions'\n    }\n  } as FieldOptionsConfig,\n};\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zub2wvZm5vbC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { StaticDataService } from '../shared/services/static-data.service';\nimport { Claim } from '../shared/data-objects/claim';\nimport { ModalService } from 'dlg-angular-components';\nimport { SubmitModalComponent } from './submit-modal.component';\nimport { StorageService } from '../shared/services/storage.service';\n\n@Component({\n  selector: 'app-fnol',\n  templateUrl: './fnol.component.html',\n  styleUrls: ['./fnol.component.scss'],\n})\nexport class FnolComponent implements OnInit {\n  form: FormGroup;\n  validForm: boolean;\n  validPersonalSection: boolean;\n  validConfirmationSection: boolean;\n  validClaimOverviewSection: boolean;\n  validClaimDetailsSection: boolean;\n  formData = {} as any;\n  personalData: {};\n  claimOverviewData: {};\n  claimDetailsData: {};\n  confirmationData: {};\n  storedPersonalData: {};\n  storedclaimOverviewData: {};\n  storedclaimDetailsData: {};\n  storedconfirmationData: {};\n\n  constructor(\n    private dataService: StaticDataService,\n    private router: Router,\n    public modal: ModalService,\n    private storage: StorageService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.form = this.fb.group({});\n  }\n\n  retrievePersonalDetails(formValues) {\n    this.validPersonalSection = formValues.sectionValid;\n    this.personalData = formValues;\n  }\n\n  retrieveConfirmation(formValues) {\n    this.validConfirmationSection = formValues.sectionValid;\n    this.confirmationData = formValues;\n  }\n\n  retrieveClaimOverview(formValues) {\n    this.validClaimOverviewSection = formValues.sectionValid;\n    this.claimOverviewData = formValues;\n  }\n\n  retrieveClaimDetails(formValues) {\n    this.validClaimDetailsSection = formValues.sectionValid;\n    this.claimDetailsData = formValues;\n  }\n\n  isFormValid() {\n    this.storedPersonalData = this.storage.retrieveSectionValues('personalSectionValues');\n    this.storedPersonalData['policyNumber'] = this.storage.retrieveSectionValue('policyNumberExcess', 'policyNumber');\n    this.storedclaimOverviewData = this.storage.retrieveSectionValues('claimSectionValues');\n    this.storedclaimDetailsData = this.storage.retrieveSectionValues('claimDetailSectionValues');\n    this.storedconfirmationData = this.storage.retrieveSectionValues('confirmationSectionValues');\n\n    return ((this.validPersonalSection &&\n             this.validConfirmationSection &&\n             this.validClaimOverviewSection &&\n             this.validClaimDetailsSection) ||\n            (this.storedPersonalData['sectionValid'] &&\n             this.storedclaimOverviewData['sectionValid'] &&\n             this.storedclaimDetailsData['sectionValid'] &&\n             this.storedconfirmationData['sectionValid'])\n           );\n  }\n\n  submitClaim() {\n    if (this.personalData) {\n      this.formData.personalDetails = this.personalData;\n    } else {\n      this.formData.personalDetails = this.storedPersonalData;\n    }\n    if (this.claimOverviewData) {\n      this.formData.claimOverview = this.claimOverviewData;\n    } else {\n      this.formData.claimOverview = this.storedclaimOverviewData;\n    }\n    if (this.claimDetailsData) {\n      this.formData.claimDetailsData = this.claimDetailsData;\n    } else {\n      this.formData.claimDetailsData = this.storedclaimDetailsData;\n    }\n    if (this.confirmationData) {\n      this.formData.confirmationData = this.confirmationData;\n    } else {\n      this.formData.confirmationData = this.storedconfirmationData;\n    }\n\n    const postClaim: Claim = {\n      policyNumber: this.formData.personalDetails.policyNumber,\n      fullName: this.formData.personalDetails.fullName,\n      phoneNumber: this.formData.personalDetails.phoneNumber,\n      emailAddress: this.formData.personalDetails.emailAddress,\n      addressLine: this.formData.personalDetails.addressLine,\n      postCode: this.formData.personalDetails.postCode,\n      incidentDate: this.formData.claimOverview.incidentDate,\n      whatHappened: this.formData.claimOverview.whatHappened,\n      claimLocation: this.formData.claimOverview.claimLocation,\n      occupied: this.formData.claimOverview.occupied,\n      damage: this.formData.claimDetailsData.damage,\n      damagedItems: this.formData.claimDetailsData.items,\n      fileUploads: this.formData.claimDetailsData.uploads,\n      callbackSlot: this.formData.confirmationData.callbackSlot,\n      termsConditions: this.formData.confirmationData.termsConditions,\n      awareExcess: this.formData.confirmationData.awareExcess,\n      convictions: this.formData.confirmationData.convictions,\n      status: 'Logged'\n    };\n    this.dataService.postClaimData(postClaim)\n      .subscribe(post => {\n        if (post) {\n          this.dataService.claimEmail = postClaim.emailAddress;\n          this.storage.clearStoredVariables();\n\n          const confirmationTitle = 'Thank You, your claim has been logged.';\n          const confirmationMessage1 = `\n              For your reference, your claim number is: ${post['id']}.\n              A claims handler will assess your claim\n              and will call you back to confirm details.`;\n          const confirmationMessage2 = `\n              We have emailed you details of your claim for future reference. Click below to see your current claim status and next steps.`;\n\n          const modal = this.modal.open(\n                          SubmitModalComponent,\n                          { title: confirmationTitle,\n                            message1: confirmationMessage1,\n                            message2: confirmationMessage2,\n                            button: 'Claim Status' });\n\n          modal.closed$.subscribe(result => {\n            if (result === 'Closing') {\n              this.router.navigate(['claim-status']);\n            } else {\n              this.router.navigate(['']);\n            }\n          });\n\n          console.log(post);\n        }\n      },\n      error => {\n        this.modal.open(\n          SubmitModalComponent,\n          { title: `Sorry, we were unable to submit your claim`,\n            message1: 'Please check your connection and try again',\n            message2: 'If you continue to experience issues, call us on 0123456789',\n            button: 'Back to my claim' });\n      });\n  }\n}\n","import { Validators } from '@angular/forms';\nimport { FieldConfig, Hint } from 'dlg-angular-components';\nimport { PersonalDetailsValidator } from '../../shared/validators/personal-details.validator';\n\nexport const FORMFIELDS = {\n  fullName: {\n    name: 'fullName',\n    label: 'Your name',\n    placeholder: 'First and last name',\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please enter your name'\n    }\n  } as FieldConfig,\n  phoneNumber: {\n    name: 'phoneNumber',\n    label: 'Phone number',\n    placeholder: '020 1122 3344 / 07123 456 789',\n    hint: {text: 'Should be at least 11 digits'} as Hint,\n    validation: [\n      Validators.required,\n      PersonalDetailsValidator.ValidPhone\n    ],\n    validationMessages: {\n      required: 'Please enter your phone number',\n      invalidPhone: 'Please enter a valid phone number'\n    }\n  } as FieldConfig,\n  emailAddress: {\n    name: 'emailAddress',\n    label: 'Email address',\n    placeholder: 'example@abc.com',\n    validation: [\n      Validators.required,\n      PersonalDetailsValidator.ValidEmail\n    ],\n    validationMessages: {\n      required: 'Please enter your email address',\n      invalidEmail: 'Please enter a valid email address'\n    }\n  } as FieldConfig,\n  addressLine: {\n    name: 'addressLine',\n    label: 'Address',\n    placeholder: '123 Road Name / Flat 2, Road Name',\n    hint: {text: 'First line of your address'} as Hint,\n    validation: [Validators.required],\n    validationMessages: {\n      required: 'Please enter your address'\n    }\n  } as FieldConfig,\n  postCode: {\n    name: 'postCode',\n    label: 'Post code',\n    placeholder: 'ZZ1 1ZZ',\n    validation: [\n      Validators.required,\n      PersonalDetailsValidator.ValidPostcode\n    ],\n    validationMessages: {\n      required: 'Please enter your post code',\n      invalidPostcode: 'Please enter a valid UK post code'\n    }\n  } as FieldConfig,\n};\n","import { Component, OnInit, Output, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { FORMFIELDS } from './form-fields';\nimport { ModalService } from 'dlg-angular-components';\nimport { SubmitModalComponent } from '../submit-modal.component';\nimport { StaticDataService } from '../../shared/services/static-data.service';\nimport { StorageService } from '../../shared/services/storage.service';\nimport { DecibelService } from '../../shared/services/decibel.service';\n\n@Component({\n  selector: 'app-personal-details',\n  templateUrl: './personal-details.component.html',\n})\nexport class PersonalDetailsComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Output() validPersonalDetails = new EventEmitter();\n\n  form: FormGroup;\n  formData: any = FORMFIELDS;\n  formSubscription: Subscription;\n  formNameSubscription: Subscription;\n  formPostcodeSubscription: Subscription;\n  progressStep;\n  policyNumber;\n  excess;\n  formValues;\n  sectionName = 'personalSectionValues';\n\n  constructor(\n    private fb: FormBuilder,\n    private dataService: StaticDataService,\n    public modal: ModalService,\n    private storage: StorageService,\n    private decibel: DecibelService\n  ) { }\n\n  isSectionValid() {\n    return this.form.get('fullName').valid &&\n           this.form.get('postCode').valid &&\n           this.form.get('addressLine').valid &&\n           this.form.get('phoneNumber').valid &&\n           this.form.get('emailAddress').valid;\n  }\n\n  isAutofillable() {\n    return this.form.get('fullName').valid &&\n           this.form.get('postCode').valid;\n  }\n\n  getPolicyHolder() {\n    const name = this.form.get('fullName').value;\n    const pcode = this.form.get('postCode').value;\n\n    this.dataService.getPolicyHolderData(name, pcode)\n      .subscribe(res => {\n        if (res[0] && res[0].name.replace(' ', '').length === name.replace(' ', '').length) {\n          this.form.controls.fullName.setValue(res[0].name);\n          this.form.controls.postCode.setValue(res[0].postCode);\n          this.form.controls.addressLine.setValue(res[0].address);\n          this.form.controls.emailAddress.setValue(res[0].emailAddress);\n          this.form.controls.phoneNumber.setValue(res[0].phoneNumber);\n          this.policyNumber = res[0].policyNumber;\n          this.excess = res[0].excess;\n          this.formValues.policyNumber = this.policyNumber;\n          document.getElementById('incidentDate-day').focus();\n          sessionStorage.setItem('policyNumberExcess', JSON.stringify(\n            { policyNumber: this.policyNumber, excess: this.excess }));\n        } else {\n          this.clearAutofillSection();\n          const modal = this.modal.open(\n            SubmitModalComponent,\n            { title: `Sorry - we couldn't find your details`,\n              message1: 'Please enter your address, phone number and email address below',\n              message2: 'Thank you',\n              button: 'Fill in my details'  });\n\n          modal.closed$.subscribe(result => {\n            document.getElementById('phoneNumber').focus();\n          });\n        }\n      },\n      error => {\n        const modal = this.modal.open(\n          SubmitModalComponent,\n          { title: `Sorry, we were unable to look up your details at this time`,\n            message1: 'Please enter your address, phone number and email address below',\n            message2: 'Thank you',\n            button: 'Fill in my details'  });\n\n        modal.closed$.subscribe(result => {\n          document.getElementById('phoneNumber').focus();\n        });\n      });\n  }\n\n  clearAutofillSection() {\n    this.form.controls.addressLine.setValue('');\n    this.form.controls.addressLine.markAsPristine();\n    this.form.controls.addressLine.markAsUntouched();\n    this.form.controls.addressLine.updateValueAndValidity();\n    this.form.controls.emailAddress.setValue('');\n    this.form.controls.emailAddress.markAsPristine();\n    this.form.controls.emailAddress.markAsUntouched();\n    this.form.controls.emailAddress.updateValueAndValidity();\n    this.form.controls.phoneNumber.setValue('');\n    this.form.controls.phoneNumber.markAsPristine();\n    this.form.controls.phoneNumber.markAsUntouched();\n    this.form.controls.phoneNumber.updateValueAndValidity();\n    this.policyNumber = '';\n  }\n\n  ngAfterViewInit() {\n    this.progressStep = document.querySelector('.progress__step1');\n    this.decibel.setTrackingAttributes(this.formData);\n    document.getElementById('fullName').focus();\n  }\n\n  ngOnInit() {\n    this.buildForm();\n\n    if (this.form.controls.fullName.value !== '') {\n      this.form.controls.fullName.markAsDirty();\n    }\n    if (this.form.controls.postCode.value !== '') {\n      this.form.controls.postCode.markAsDirty();\n    }\n    if (this.form.controls.phoneNumber.value !== '') {\n      this.form.controls.phoneNumber.markAsDirty();\n    }\n    if (this.form.controls.emailAddress.value !== '') {\n      this.form.controls.emailAddress.markAsDirty();\n    }\n    if (this.form.controls.addressLine.value !== '') {\n      this.form.controls.addressLine.markAsDirty();\n    }\n\n    if (this.isSectionValid()) {\n      const policyNumberExcess = sessionStorage.getItem('policyNumberExcess');\n      if (policyNumberExcess) {\n        this.policyNumber = JSON.parse(policyNumberExcess).policyNumber;\n        this.excess = JSON.parse(policyNumberExcess).excess;\n      }\n    }\n\n    this.formNameSubscription = this.form.controls.fullName.valueChanges\n      .subscribe(value => { this.clearAutofillSection(); });\n\n    this.formPostcodeSubscription = this.form.controls.postCode.valueChanges\n      .subscribe(value => { this.clearAutofillSection(); });\n\n    this.formSubscription = this.form.valueChanges.subscribe(values => {\n      values.sectionValid = this.isSectionValid();\n      this.storage.setSectionValue(this.sectionName, 'sectionValid', values.sectionValid);\n      this.storage.saveSectionValues(this.sectionName, this.form.value);\n\n      if (values.sectionValid) {\n        values.policyNumber = this.policyNumber;\n        this.progressStep.classList.add('progress__valid-step');\n      } else {\n        this.progressStep.classList.remove('progress__valid-step');\n      }\n      this.formValues = values;\n      this.validPersonalDetails.emit(this.formValues);\n    });\n  }\n\n  ngOnDestroy() {\n    this.formSubscription.unsubscribe();\n    this.formNameSubscription.unsubscribe();\n    this.formPostcodeSubscription.unsubscribe();\n  }\n\n  buildForm() {\n    this.form = this.fb.group({\n      fullName: [this.storage.retrieveSectionValue(this.sectionName, 'fullName'), this.formData.fullName.validation],\n      phoneNumber: [this.storage.retrieveSectionValue(this.sectionName, 'phoneNumber'), this.formData.phoneNumber.validation],\n      emailAddress: [this.storage.retrieveSectionValue(this.sectionName, 'emailAddress'), this.formData.emailAddress.validation],\n      addressLine: [this.storage.retrieveSectionValue(this.sectionName, 'addressLine'), this.formData.addressLine.validation],\n      postCode: [this.storage.retrieveSectionValue(this.sectionName, 'postCode'), this.formData.postCode.validation],\n    });\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { ModalRef, MODAL_DATA } from 'dlg-angular-components';\n\n@Component({\n  selector: 'app-submit-modal-content',\n  templateUrl: './submit-modal.component.html',\n})\nexport class SubmitModalComponent {\n\n  constructor(\n    @Inject(MODAL_DATA) public data: any,\n    public modalRef: ModalRef\n  ) { }\n\n  onClose() {\n    this.modalRef.close('Closing');\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnDestroy, AfterViewInit, Input } from '@angular/core';\nimport { StorageService } from '../shared/services/storage.service';\nimport { Router } from '@angular/router';\nimport { CLAIMSTATUSES } from '../shared/data/claim-statuses';\n\n@Component({\n  selector: 'app-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss']\n})\nexport class ProgressBarComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() claimsCounts?: {};\n  step1Classes;\n  step2Classes;\n  step3Classes;\n  step4Classes;\n  claimStatuses = CLAIMSTATUSES;\n\n  constructor(\n    private storage: StorageService,\n    public router: Router\n  ) { }\n\n  checkSectionValidity(sectionName: string, classList) {\n    if (this.storage.retrieveSectionValue(sectionName, 'sectionValid') === true) {\n      classList.add('progress__valid-step');\n    } else {\n      classList.remove('progress__valid-step');\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.router.url === '/make-a-claim') {\n      const progressSteps = document.querySelectorAll('.progress__step');\n      this.step1Classes = progressSteps[0].classList;\n      this.step2Classes = progressSteps[1].classList;\n      this.step3Classes = progressSteps[2].classList;\n      this.step4Classes = progressSteps[3].classList;\n      this.checkSectionValidity('personalSectionValues', this.step1Classes);\n      this.checkSectionValidity('claimSectionValues', this.step2Classes);\n      this.checkSectionValidity('claimDetailSectionValues', this.step3Classes);\n      this.checkSectionValidity('confirmationSectionValues', this.step4Classes);\n      window.addEventListener('scroll', this.scroll, true);\n    }\n  }\n\n  ngOnInit() { }\n\n  ngOnDestroy() {\n    window.removeEventListener('scroll', this.scroll, true);\n  }\n\n  scroll = (e): void => {\n    const scrollPosition = e.target.scrollingElement.scrollTop;\n\n    if (scrollPosition >= 1700) {\n      this.step1Classes.remove('progress__active-step');\n      this.step2Classes.remove('progress__active-step');\n      this.step3Classes.remove('progress__active-step');\n      this.step4Classes.add('progress__active-step');\n    } else if (scrollPosition >= 1200) {\n      this.step1Classes.remove('progress__active-step');\n      this.step2Classes.remove('progress__active-step');\n      this.step3Classes.add('progress__active-step');\n      this.step4Classes.remove('progress__active-step');\n    } else if (scrollPosition >= 600) {\n      this.step1Classes.remove('progress__active-step');\n      this.step2Classes.add('progress__active-step');\n      this.step3Classes.remove('progress__active-step');\n      this.step4Classes.remove('progress__active-step');\n    } else {\n      this.step1Classes.add('progress__active-step');\n      this.step2Classes.remove('progress__active-step');\n      this.step3Classes.remove('progress__active-step');\n      this.step4Classes.remove('progress__active-step');\n    }\n  }\n}\n","export const CLAIMSTATUSES = [\n  'Submitted',\n  'Logged',\n  'In Progress',\n  'With Assessor',\n  'Approved',\n  'Declined',\n  'Complete',\n  'Feedback'\n];\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DecibelService {\n\n  constructor() { }\n\n  setTrackingAttributes(formData) {\n    document.querySelectorAll(`.dlg-input input,\n                               .dlg-radio input,\n                               .dlg-checkbox input,\n                               .dlg-datepicker,\n                               .dlg-textarea`).forEach(input => {\n\n      const nameAttribute = input.getAttribute('ng-reflect-name');\n      const formDataAttribute = formData[nameAttribute];\n\n      if (nameAttribute && formDataAttribute) {\n        if (input.classList.contains('dlg-datepicker')) {\n          input.querySelectorAll('.dlg-select').forEach(datePart => {\n            datePart.setAttribute('data-di-id', '#' + datePart.id);\n            datePart.setAttribute('data-di-field-id', datePart.id);\n            datePart.setAttribute('data-di-field-error', formDataAttribute.validationMessages.required);\n          });\n        } else {\n          input.setAttribute('data-di-id', '#' + formDataAttribute.name);\n          input.setAttribute('data-di-field-id', formDataAttribute.name);\n          input.setAttribute('data-di-field-error', formDataAttribute.validationMessages.required);\n        }\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { PolicyHolder } from '../data-objects/policy-holder';\nimport { Claim } from '../data-objects/claim';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaticDataService {\n  claimEmail: string;\n  protected urlPolicies = 'http://localhost:3000/policyholders';\n  protected urlClaims = 'http://localhost:3004/claims';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n    })\n  };\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  getPolicyHolderData(name: string, pcode: string) {\n    const pcodeRegEx = pcode.replace(' ', '').split('').join('\\\\s*');\n    return this.httpClient.get<PolicyHolder[]>(`${this.urlPolicies}?name_like=${name}&postCode_like=^${pcodeRegEx}$`);\n  }\n\n  postClaimData(claim: Claim) {\n    return this.httpClient.post<Claim>(`${this.urlClaims}`, claim, this.httpOptions);\n  }\n\n  getClaims(email: string) {\n    return this.httpClient.get<Claim[]>(`${this.urlClaims}?emailAddress=${email}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  saveSectionValues(sectionName: string, allFormValues) {\n    sessionStorage.removeItem(sectionName);\n    sessionStorage.setItem(sectionName, JSON.stringify(allFormValues));\n  }\n\n  retrieveSectionValue(sectionName: string, field: string) {\n    const sectionValues = JSON.parse(sessionStorage.getItem(sectionName));\n    return (sectionValues) ? sectionValues[field] : '';\n  }\n\n  setSectionValue(sectionName: string, field: string, value) {\n    const sectionValues = JSON.parse(sessionStorage.getItem(sectionName));\n    if (sectionValues) {\n      sectionValues[field] = value;\n      sessionStorage.setItem(sectionName, JSON.stringify(sectionValues));\n    }\n  }\n\n  retrieveSectionValues(sectionName: string) {\n    const sectionValues = JSON.parse(sessionStorage.getItem(sectionName));\n    return (sectionValues) ? sectionValues : {};\n  }\n\n  clearStoredVariables() {\n    localStorage.removeItem('damagedItems');\n    localStorage.removeItem('fileUploads');\n    sessionStorage.removeItem('personalSectionValues');\n    sessionStorage.removeItem('claimSectionValues');\n    sessionStorage.removeItem('claimDetailSectionValues');\n    sessionStorage.removeItem('confirmationSectionValues');\n    sessionStorage.removeItem('policyNumberExcess');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DlgWalrusModule } from 'dlg-angular-components';\nimport { FnolComponent } from '../fnol/fnol.component';\nimport { PersonalDetailsComponent } from '../fnol/personal-details/personal-details.component';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { ProgressBarComponent } from '../progress-bar/progress-bar.component';\nimport { ClaimOverviewComponent } from '../fnol/claim-overview/claim-overview.component';\nimport { ClaimDetailsComponent } from '../fnol/claim-details/claim-details.component';\nimport { ConfirmationComponent } from '../fnol/confirmation/confirmation.component';\nimport { SubmitModalComponent } from '../fnol/submit-modal.component';\nimport { ClaimStatusComponent } from '../claim-status/claim-status.component';\nimport { HomeComponent } from '../home/home.component';\n\n@NgModule({\n  declarations: [\n    FnolComponent,\n    PersonalDetailsComponent,\n    ProgressBarComponent,\n    ClaimOverviewComponent,\n    ClaimDetailsComponent,\n    ConfirmationComponent,\n    SubmitModalComponent,\n    ClaimStatusComponent,\n    HomeComponent,\n  ],\n  imports: [\n    ReactiveFormsModule,\n    DlgWalrusModule,\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    FnolComponent,\n    PersonalDetailsComponent,\n    ProgressBarComponent,\n    ClaimOverviewComponent,\n    ClaimDetailsComponent,\n    ConfirmationComponent,\n    SubmitModalComponent,\n    DlgWalrusModule,\n    ReactiveFormsModule\n  ],\n  entryComponents: [\n    SubmitModalComponent\n  ]\n})\nexport class SharedModule { }\n","import { FormControl } from '@angular/forms';\n\nexport class CommonValidator {\n\n  static ValidDate(control: FormControl) {\n    let invalidDay = false;\n    let invalidMonth = false;\n    let invalidYear = false;\n    let inDate;\n\n    const yearRegEx = /^\\d{4}$/;\n    const dayMonthRegEx = /^\\d{1,2}$/;\n    const dayField = control.value[0];\n    const monthField = control.value[1];\n    const yearField = control.value[2];\n    const dateNow = new Date();\n    const minDate = new Date().setMonth(dateNow.getMonth() - 12);\n\n    if (!(dayMonthRegEx.test(dayField) &&\n          dayField >= 1 &&\n          dayField <= 31)) { invalidDay = true; }\n\n    if (!(dayMonthRegEx.test(monthField) &&\n          monthField >= 1 &&\n          monthField <= 12)) { invalidMonth = true; }\n\n    if (!yearRegEx.test(yearField)) { invalidYear = true; }\n\n    if (invalidDay || invalidMonth || invalidYear) {\n      return { invalidDate: true };\n    } else {\n      inDate = new Date(parseInt(yearField),\n                        parseInt(monthField) - 1,\n                        parseInt(dayField));\n      if (inDate > dateNow || inDate < minDate) {\n        return { invalidDateRange: true };\n      }\n    }\n  }\n\n  static ValidNumber(control: FormControl) {\n    const numberEx = /^\\d{1,}$/g;\n    if (!numberEx.test(control.value)) {\n      return { invalidNumber: true };\n    }\n  }\n}\n","import { FormControl } from '@angular/forms';\n\nexport class PersonalDetailsValidator {\n\n  static ValidPostcode(control: FormControl) {\n    const postcodeRegEx = /[A-Z]{1,2}[0-9]{1,2}?[0-9][A-Z]{2}/i;\n    if (!postcodeRegEx.test(control.value.replace(' ', ''))) {\n      return { invalidPostcode: true };\n    }\n  }\n\n  static ValidPhone(control: FormControl) {\n    const phoneRegEx = /^\\d{10,}$|^[+]\\d{10,}$/;\n    if (!phoneRegEx.test(control.value.replace(/\\s|[-]|[(]|[)]/g, ''))) {\n      return { invalidPhone: true };\n    }\n  }\n\n  static ValidEmail(control: FormControl) {\n    const emailRegEx = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegEx.test(control.value)) {\n      return { invalidEmail: true };\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}